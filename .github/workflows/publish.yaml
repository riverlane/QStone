name: Build and publish artefacts to PyPI

# Controls when the action will run.
on:
  push:

jobs:
  build:
    # Triggers the workflow on on tag pushes
    # Be sure to add tag rulesets to ensure only admins can push tags
    if: startsWith(github.ref, 'refs/tags/')
    name: Build distribution
    runs-on: ubuntu-latest
    env:
      POETRY_HOME: /opt/poetry
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get install openmpi-bin openmpi-doc libopenmpi-dev
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: python3 -m pip install --upgrade pip
      - run: python3 -m venv $POETRY_HOME
      - run: $POETRY_HOME/bin/pip install poetry==1.8.3
      - run: $POETRY_HOME/bin/poetry --version
      - run: echo "$POETRY_HOME/bin" >> $GITHUB_PATH
      - run: poetry install --all-extras
      - run: poetry build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish:
    name: Publish Python distribution to PyPI
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/qstone
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
